//Given an array of integers, where all elements but one occur twice, find the unique element

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

      public static int lonelyinteger(List<Integer> a) {
        List<Integer> arr2 = new ArrayList<>();  
        int counter =0;
        int i,j,k;
        int index=0;
        int uniqe;
         
        for(i = 0;i<a.size();i++){
            for(j=0;j<a.size();j++){
                if(a.get(i) == a.get(j)){
                    counter = counter +1;
                }
            }
         arr2.add(counter);
         counter = 0;
            
        }
        for(k = 0;k<arr2.size();k++){
        if(arr2.get(k)<2){
             index = k;
        }
     }
      uniqe = a.get(index);
        
        return uniqe;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        String[] aTemp = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        List<Integer> a = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            int aItem = Integer.parseInt(aTemp[i]);
            a.add(aItem);
        }

        int result = Result.lonelyinteger(a);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
